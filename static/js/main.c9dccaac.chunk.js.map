{"version":3,"sources":["img/temperature.jpg","components/Form.js","components/Result.js","components/Img.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","react_default","a","createElement","type","value","placeholder","onChange","change","Result","_props$weather","weather","date","city","sunrise","sunset","temp","pressure","wind","err","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","className","concat","Img","src","picture","alt","App","state","handleInputChange","e","_this","setState","target","prevProps","prevState","_this2","this","length","API","fetch","then","response","ok","Error","json","data","time","toLocaleString","sys","Math","floor","main","speed","catch","components_Form","components_Result","components_Img","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c9dccaac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/temperature.0ba2046e.jpg\";","//this comp is a form when you can type a city\r\nimport React from \"react\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        value={props.value}\r\n        placeholder=\"Wpisz miasto\"\r\n        onChange={props.change}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","//this comp is a result of search\r\nimport React from \"react\";\r\nimport \"../css/Result.css\";\r\n\r\nconst Result = props => {\r\n  //destructuring\r\n  const {\r\n    date,\r\n    city,\r\n    sunrise,\r\n    sunset,\r\n    temp,\r\n    pressure,\r\n    wind,\r\n    err\r\n  } = props.weather;\r\n  let content = null;\r\n  if (!err && city) {\r\n    //actually data and time\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n    content = (\r\n      <div>\r\n        <h3>\r\n          Pogoda dla miasta <strong>{city}</strong>\r\n        </h3>\r\n        <h4>Dane aktualne dla: {date}</h4>\r\n        <h4>Aktualna temperatura: {temp} &#186;C</h4>\r\n        <h4>Wschód słońca dzisiaj o {sunriseTime}</h4>\r\n        <h4>Zachód słońca dzisiaj o {sunsetTime}</h4>\r\n        <h4>Aktualna siła wiatru: {wind} m/s</h4>\r\n        <h4>Aktualne ciśnienie {pressure} hPa</h4>\r\n      </div>\r\n    );\r\n  }\r\n  return <div className=\"result\">{err ? `Brak ${city} w bazie` : content}</div>;\r\n};\r\n\r\nexport default Result;\r\n","//this comp is a picture\r\nimport React from \"react\";\r\nimport picture from \"../img/temperature.jpg\";\r\nimport \"../css/Img.css\";\r\n\r\nconst Img = () => {\r\n  return <img className=\"temperature\" src={picture} alt=\"\" />;\r\n};\r\n\r\nexport default Img;\r\n","//it is main component of React application\r\nimport React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Result from \"./Result\";\r\nimport Img from \"./Img\";\r\nimport \"../css/App.css\";\r\n\r\nconst APIKey = \"3790fa34d346ad2608be38eca56077b2\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    value: \"\",\r\n    date: \"\",\r\n    city: \"\",\r\n    sunrise: \"\",\r\n    sunset: \"\",\r\n    temp: \"\",\r\n    pressure: \"\",\r\n    wind: \"\",\r\n    err: \"\"\r\n  };\r\n\r\n  //handler text typed in input\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  };\r\n\r\n  //allow to searching DB 'live'\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.value.length === 0) return;\r\n    if (prevState.value !== this.state.value) {\r\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value},uk&APPID=${APIKey}`;\r\n\r\n      //get data from API\r\n      fetch(API)\r\n        .then(response => {\r\n          if (response.ok) {\r\n            return response;\r\n          }\r\n          throw Error(\"error\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          const time = new Date().toLocaleString();\r\n          this.setState({\r\n            err: false,\r\n            date: time,\r\n            sunrise: data.sys.sunrise,\r\n            sunset: data.sys.sunset,\r\n            temp: Math.floor(data.main.temp - 273, 2),\r\n            pressure: data.main.pressure,\r\n            wind: data.wind.speed,\r\n            city: this.state.value\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            err: true,\r\n            city: this.state.value\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"textAndImg\">\r\n          <div className=\"text\">\r\n            <h1>Pogoda</h1>\r\n            <h2>Wpisz poniżej miasto, dla którego chcesz sprawdzić pogodę.</h2>\r\n            <h3>\r\n              Ze względu na wczesną wersję aplikacji musisz wpisać miasto\r\n              znajdujące się w Anglii. Drugim ograniczeniem jest wpisywanie ich\r\n              oryginalnych nazw (np. London zamiast Londyn). Wkrótce wprowadzę\r\n              rozszerzenie. Powodzenia!\r\n            </h3>\r\n            <Form value={this.state.value} change={this.handleInputChange} />\r\n            {this.state.value ? <Result weather={this.state} /> : null}\r\n          </div>\r\n          <Img />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","//main component, connection between React-app and HTML page\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}